AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Resources:
  LifeDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: LifeDataTable
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S
        - AttributeName: date
          AttributeType: N
      KeySchema:
        - AttributeName: uuid
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  LifeEntryTypeTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: LifeEntryTypeTable
      AttributeDefinitions:
        - AttributeName: key
          AttributeType: S
      KeySchema:
        - AttributeName: key
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  LifeRoutineTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: LifeRoutineTable
      AttributeDefinitions:
        - AttributeName: key
          AttributeType: S
      KeySchema:
        - AttributeName: key
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  LifedataAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LifedataAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:Query
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:BatchWriteItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource:
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/LifeDataTable"
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/LifeEntryTypeTable"
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/LifeRoutineTable"

  LifeDataApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      ApiKeySourceType: HEADER
      Auth:
        ApiKeyRequired: true

  LambdaHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LifeDataLambda
      Handler: vita_lambda_api
      Runtime: go1.x
      CodeUri: .
      Timeout: 30
      Role: !GetAtt LifedataAccessRole.Arn
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref LifeDataApiGateway
            Auth:
              ApiKeyRequired: true

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${LifeDataApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
